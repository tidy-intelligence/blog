---
title: "Sakura Visualizations"
description: "Visualizing first and full cherry blossom bloom dates for Japanese regions using R and Python"
metadata:
  pagetitle: "Sakura Visualizations"
author: "Christoph Scheuch"
date: "2024-05-27" 
image: thumbnail.png
image-alt: An old school beige-green Chinese bus and a pair of pliers lying on the ground side by side. The scene is well-lit with a vibrant, clear blue sky overhead and lush green grass underfoot. Created with DALL-E.
categories: 
  - R
  - Python
  - Visualization
---


## Loading packages and data

We start by loading the main packages of interest and the popular `palmerpenguins` package that exists for both R and Python. We then use the `penguins` data frame as the data to compare all functions and methods below. 

::: {.panel-tabset}
### R
```{r}
#| message: false
library(dplyr)
library(tidyr)
library(readr)
library(lubridate)
library(ggplot2)
library(showtext)
```
### Python
```{python}

```
:::

## Set theme and color scheme



```{r}
# TODO: fix correct font usage
font_add(family = "SF Pro", regular = "C:/Users/christoph.scheuch/AppData/Local/Microsoft/Windows/Fonts/SF-Pro-Text-Regular.otf")

theme_set(theme_classic(base_size = 16)) 

theme_update(
  plot.title.position = "plot",
  plot.title = element_text(family = "SF Pro"),
  panel.grid.minor = element_blank(),
  panel.grid.major = element_blank(),
  strip.background = element_blank(),
  strip.text = element_text(face = "bold"),
  axis.title.x = element_blank(), 
  axis.title.y = element_blank(),
  axis.ticks = element_blank(),
  axis.line = element_blank()
)

colors <- c("#ffb7c5", "#b7c5ff", "#c5ffb7")
```

## Download and prepare data
```{r}
#| message: false
# Sakura dates by region
# https://www.kaggle.com/datasets/ryanglasnapp/japanese-cherry-blossom-data
sakura_first_bloom_dates <- read_csv("https://raw.githubusercontent.com/christophscheuch/data-viz-japan/main/data/sakura_first_bloom_dates.csv")
sakura_full_bloom_dates <- read_csv("https://raw.githubusercontent.com/christophscheuch/data-viz-japan/main/data/sakura_full_bloom_dates.csv")

sakura_first_bloom_dates_long <- sakura_first_bloom_dates |> 
  select(-c("30 Year Average 1981-2010", "Notes")) |> 
  rename(location = `Site Name`,
         is_currently_observed = `Currently Being Observed`) |> 
  pivot_longer(cols = -c(location, is_currently_observed),
               names_to = "year", values_to = "first_bloom_date")

sakura_full_bloom_dates_long <- sakura_full_bloom_dates |> 
  select(-c("30 Year Average 1981-2010", "Notes")) |> 
  rename(location = `Site Name`,
         is_currently_observed = `Currently Being Observed`) |> 
  pivot_longer(cols = -c(location, is_currently_observed),
               names_to = "year", values_to = "full_bloom_date")

sakura_dates <- sakura_first_bloom_dates_long |> 
  full_join(sakura_full_bloom_dates_long, join_by(location, year, is_currently_observed)) |> 
  mutate(year = as.integer(year),
         first_bloom_day = as.integer(first_bloom_date - as.Date(paste(year, "-01-01", sep = ""))),
         full_bloom_day = as.integer(full_bloom_date - as.Date(paste(year, "-01-01", sep = ""))),
         time_to_full_bloom = as.integer(full_bloom_date - first_bloom_date))
```

```{r}
#| message: false
# Location longitudes and latitudes
# https://github.com/Yuriko-Schumacher/statistical-analysis-of-cherry-blossom-first-bloom-date/tree/main/data
observatory_locations <- read_csv("https://raw.githubusercontent.com/Yuriko-Schumacher/statistical-analysis-of-cherry-blossom-first-bloom-date/main/data/observatory-locations.csv")
southern_islands <- c("Naze", "Ishigaki Island", "Miyakojima", "Naha", "Minami Daito Island")
```

```{r}
#| message: false
# Sort locations into regions (used ChatGPT for labeling)
# https://en.wikipedia.org/wiki/List_of_regions_of_Japan
locations_region <- read_csv("https://raw.githubusercontent.com/christophscheuch/data-viz-japan/main/data/locations_region.csv") |> 
  mutate(region = if_else(location %in% southern_islands, "Ryukyu Islands", region)) |> 
  mutate(region = factor(region, levels = c("Hokkaidō", "Honshū", "Shikoku", "Kyūshū", "Ryukyu Islands")))
```

```{r}
#| message: false
sakura_data <- sakura_dates |> 
  left_join(observatory_locations, join_by(location)) |> 
  left_join(locations_region, join_by(location)) |> 
  mutate(is_southern_island = location %in% southern_islands) |> 
  filter(is_currently_observed == TRUE) |> 
  filter(year >= 1954) |> # to have 7 full decades
  mutate(
    second_half = year > 1988,
    sample = case_when(
      year >= 1954 & year <= 1964 ~ "From 1954 to 1963", 
      year >= 2013 & year <= 2024 ~ "From 2013 to 2024"),
    sample_tile = ntile(year, 7),
    first_bloom_group = case_when(
      month(first_bloom_date) == 1 ~ "January or earlier",
      month(first_bloom_date) == 2 ~ "February",
      month(first_bloom_date) == 3  & days(first_bloom_date) <= 15 ~ "First half of March",
      month(first_bloom_date) == 3  & days(first_bloom_date) > 15 ~ "Second half of March",
      month(first_bloom_date) >= 4 ~ "April or later"
    ),
    time_to_full_group = case_when(
      time_to_full_bloom < 7 ~ "Less than 1 week",
      time_to_full_bloom >= 7 & time_to_full_bloom < 14 ~ "More than 1 week, less than 2",
      time_to_full_bloom >= 14 ~ "More than 2 weeks"
    ),
    first_bloom_group = factor(first_bloom_group, levels = c("January or earlier", "First half of March", "Second half of March", "April or later"))
  )
```

## Time to full bloom per region

```{r}
#| message: false
#| fig-showtext: true
#| fig-width: 12
#| fig-height: 8
fig_sakura_regions <- sakura_data |> 
  filter(!is.na(full_bloom_day)) |> 
  ggplot(aes(x = year, y = full_bloom_day)) +
  geom_point(color = colors[1], alpha = 0.5, size = 2) +
  geom_smooth(color = colors[2], se = FALSE, linewidth = 2) +
  facet_wrap(~region, nrow = 1) + 
  labs(title = expression("Day of the year with peak cherry tree blossom for regions in Japan since 1953"),
       subtitle = "Cities in northern regions Hokkaidō and Honshū exhibit earlier full blooms, while Ryukyu Islands even later",
       x = NULL, y = NULL) +
  scale_x_continuous(breaks = seq(1950, 2030, by = 20)) +
  scale_y_continuous(breaks = seq(30, 150, by = 30))
fig_sakura_regions
```

## Time between first and full bloom

```{r}
#| message: false
#| fig-showtext: true
#| fig-width: 12
#| fig-height: 8
fig_time_to_full_bloom <- sakura_data |>
  filter(!is.na(time_to_full_bloom)) |> 
  ggplot(aes(x = year, y = time_to_full_bloom)) +
  geom_point(color = colors[1], alpha = 0.5) +
  geom_smooth(color = colors[2], se = FALSE, linewidth = 2) +
  facet_wrap(~region, nrow = 1) +
  labs(title = "Days from blossoms opening to peak bloom for regions in Japan",
       subtitle = "Hokkaidō exhibits the shortest and decreasing blooming periods, while Kyūshū's have lengthened",
       x = NULL, y = NULL) +
  scale_x_continuous(breaks = seq(1950, 2030, by = 20))
fig_time_to_full_bloom
```

